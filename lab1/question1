public class CircularArray {
	public double[] buf;   // Circular buffer
	public int read, write, count;  // read and write pointers
	// Constructor
	public CircularArray(int size)
	{
	   	 buf = new double[size];    // Create array for circular buffer
	    
	   	 read = 0;                  // Initialized read & write pointers
	   	 write = 0;
	     count = 0;
	}

	public void enqueue( double x )
	{
	  if (read == (write + 1) % (buf.length))  // Array is full
	  {
	    //Increase the array size
	    expandCapacity();  
	  }
	  buf[write] = x;                 // Store x in buf at write pointer
	  write = (write+1)%(buf.length); // Advance the write pointer
	  }

	// Creates a new bigger array to store the contents of the queue
	 public void expandCapacity()
	 {
	    double[] bigger = new double[buf.length + 1];   
	    
	    for(int scan=0; scan < count; scan++)
	    {
	      bigger[scan] = buf[read];
	      read=(read+1) % buf.length;
	    }

	    read = 0;
	    write = count;
	    buf = bigger;
	 }
}
